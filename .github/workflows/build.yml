name: build

on: [push]

defaults:
  run:
    shell: bash

jobs:
  build-windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        buildType: ["Debug", "Release"]
        buildArch: ["x86", "x64"]
    steps:
    - uses: actions/checkout@v2

    - name: Setup NuGet Credentials
      run: >
        nuget sources add
        -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
        -storepasswordincleartext
        -name "GitHub"
        -username "${{ github.repository_owner }}"
        -password "${{ secrets.GITHUB_TOKEN }}"
    - uses: seanmiddleditch/gha-setup-ninja@v3

    - name: Configure build tools
      uses: ilammy/msvc-dev-cmd@v1.5.0
      with:
        arch: ${{ matrix.buildArch }}

    - name: run-cmake
      run: |
        mkdir cmake_out
        cd cmake_out

        cmake -G Ninja \
          -DSourceRCON_WARNINGS_AS_ERRORS=ON \
          ../

        cmake --build . --config ${{ matrix.buildType }}



  build-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        buildType: ["Debug", "Release"]
        buildCompiler:
          - exe: g++-9
            deps: ""
          - exe: clang++-9
            deps: clang-9 libc++-9-dev libc++abi-9-dev
          - exe: clang++-10
            deps: "clang-10 libc++-10-dev libc++abi-10-dev"

    steps:
    - uses: actions/checkout@v2

    - name: Setup NuGet Credentials
      run: >
        nuget sources add
        -source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
        -storepasswordincleartext
        -name "GitHub"
        -username "${{ github.repository_owner }}"
        -password "${{ secrets.GITHUB_TOKEN }}"

    - name: Add repos
      run: |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 15CF4D18AF4F7421
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal main" | sudo tee /etc/apt/sources.list.d/llvm.list
        sudo apt update

    - run: sudo apt install ${{ matrix.buildCompiler.deps }} ninja-build

    - name: run-cmake
      env:
        CXX: ${{ matrix.buildCompiler.exe }}
        CMAKE_CXX_COMPILER: ${{ matrix.buildCompiler.exe }}
        CXXFLAGS: -Wall -Wpedantic -Wextra
      run: |
        mkdir cmake_out
        cd cmake_out

        cmake -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ matrix.buildType }} \
          -DSourceRCON_WARNINGS_AS_ERRORS=ON \
          ../

        cmake --build .
